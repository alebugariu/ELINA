# -*- mode: makefile -*-

# If defined to non-empty value, compiles the OCaml interface (bytecode)
HAS_OCAML = 
# If defined to non-empty value, compiles the OCaml interface (native code)
HAS_OCAMLOPT = 

IS_APRON = #-DHAS_APRON
# install location of ELINA
# ($(ELINA_PREFIX)/include, $(ELINA_PREFIX)/lib)
ELINA_PREFIX = /usr/local

# APRON install location ($(APRON_PREFIX)/include, ($APRON_PREFIX)/lib
APRON_PREFIX = /usr/local

# install location of MLGMPIDL
# ($(MLGMPIDL_PREFIX)/lib)
# Only if you do not use FINDLIB
MLGMPIDL_PREFIX =  /usr/local

# GMP install location, ($(GMP_PREFIX)/include, ($GMP_PREFIX)/lib
GMP_PREFIX = /usr/local

# MPFR install location ($(MPFR_PREFIX)/include, ($MPFR_PREFIX)/lib
MPFR_PREFIX = /usr/local

# If defined to non-empty value, assumed to be the right executable,
# use FINDLIB/ocamlfind package system
OCAMLFIND = ocamlfind

# install location of OCAML
CAML_PREFIX = `ocamlfind printconf stdlib`

# install location of CAMLIDL
CAMLIDL_PREFIX = `ocamlfind query camlidl`

# C compilation flags
CFLAGS = \
-Wcast-qual -Wswitch -Werror-implicit-function-declaration \
-Wall -Wextra -Wundef -Wbad-function-cast -Wcast-align -Wstrict-prototypes \
-Wno-unused \
-std=c99 -U__STRICT_ANSI__ \
-fPIC -O3 -DNDEBUG

# Architecture specific flags
AFLAGS := -D_GNU_SOURCE -pthread -fno-tree-vectorize -m64 -march=native

DFLAGS := -g  -DNUM_LONGLONGRAT -DNUM_DOUBLE $(IS_VECTOR) $(IS_APRON) -DTHRESHOLD=0.75 -DTIMING $(AFLAGS)

CAMLIDL = camlidl

# specify the location of perl
PERL = /usr/bin/perl

OCAMLC = ocamlc.opt
OCAMLOPT = ocamlopt.opt

# ocamlc compilation flags
OCAMLFLAGS = -g
# ocamlopt compilation flags
OCAMLOPTFLAGS = -inline 20

OCAMLMKLIB = ocamlmklib

INSTALL = install
INSTALLd = install -d


